
1) stworzenie nowego web API
2) uruchomienie - aby ominąc zabezpieczenie ssl w chrome wpisujemy w przeglądarce chrome://flags/#allow-insecure-localhost i ustawiamy na enabled
3) Testowanie API:
    - w swaggerze
	- w curlu - mini program do testowania api w konsoli
	- w postmanie - rozbudowany program do testowania api
	- w przeglądarce
	- w visual studio używając plików .http

w curl:
w konsoli wpisujemy:
	curl -X "GET" "https://localhost:7061/WeatherForecast" -H "accept: text/plain"

	w windows należy zamiast ' używać "

	parametr -k pozwala ominąć zabezpieczenie ssl
w powershellu:
	Invoke-WebRequest -Method GET -Uri "https://localhost:7061/WeatherForecast" -Headers @{"accept" = "text/plain"}


4) Omówienie czasowników HTTP i zasady działania kontrolerów

5) Rozbudujemy API o nowy kontroler - ProductController
 - dodanie nowego kontrolera
 - dodanie nowego modelu (Product) w projekcie wspólnym (shared)
 - dodanie ServiceReponse w projekcie wspólnym (shared)
 - dodanie nowego serwisu (ProductService) w projekcie API
 - dodanie DataSeeder w nowym projekcie API
 - wdrożenie mechanizmu DI (dependency injection) poprzez stworzenie Intrefejsu a potem konfiguracje w Program.cs

 6) Rozbudowa aplikacji klienckiej tak aby korzystała z nowego API
	- dodanie serwisu ProductService
	- refaktoryzacja App.xaml.cs 